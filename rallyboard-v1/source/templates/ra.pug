extend default

block head_block
  -
    var is_live = function(event) {
      var today = new Date()
      var yesterday = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);
      if ("start" in event) {
        if(event.start >= today) {
          var end = event.start
          if ("end" in event) {
            end = event.end
          }
          if(end <= yesterday) {
            return true
          }
        }
      }
      return false
    }
    var live_event = ""
    if (is_live(data)) {
      var live_event = "true"
    }

  script(src='/socket.io/socket.io.js')
  script.
    var year = "#{data.year}"
    var event_code = "#{data.event_code}"
    if ("" === "#{data.updated}") {
      window.addEventListener('load', function() { 
        var socket = io.connect('http://rallyscores.com');
        socket.once('connect', function() {
          socket.emit('crawl', {
            "year":year, 
            "event_code":event_code
          })
        })

        var get_status = function(jobid, status) {
          if (status.status !== "ok") {
            return status.status
          }

          for (var i in status.running) {
            if (jobid === status.running[i].id) {
              return "running"
            }
          }

          for (var i in status.finished) {
            if (jobid === status.finished[i].id) {
              return "finished"
            }
          }

          for (var i in status.pending) {
            if (jobid === status.pending[i].id) {
              return "pending"
            }
          }

          return "unknown"
        }

        var jobid = ""

        socket.on('crawling', function(data) {
          var jobid = data.jobid
          document.getElementById("jobid").innerHTML = jobid;

          socket.on('status', function(status) {
            status = JSON.parse(status)
            job_status = get_status(jobid, status)

            document.getElementById("status").innerHTML = job_status;

            if (job_status === "finished") {
              socket.emit('finished', {
                "year":year, 
                "event_code":event_code
              })
              // reload to get the latest data
              window.location.reload()
            }
          })
        })
      })
    } else {

      window.addEventListener('load', function() { 
        var socket = io.connect('http://rallyscores.com');
        socket.once('connect', function() {
          socket.emit('viewing', {
            "year":year, 
            "event_code":event_code,
            "is_live": "#{live_event}"
          })
        })

        socket.on('refresh', function(event_data) {
          if (year == event_data.year && 
            event_code == event_data.event_code) {
            // reload to get the latest data
            window.location.reload()
          }
        })
      })
    }

block content
  if data.updated
    - 
      var monthNames = [
        "January", "February", "March",
        "April", "May", "June", "July",
        "August", "September", "October",
        "November", "December"
      ];
      var dates = monthNames[data.start.getMonth()] + ' ' + data.start.getDate()
      if(data.end) { dates += ' - ' + data.end.getDate(); }
      dates += ', ' + data.start.getFullYear()

    h1 #{data.event_name} #{data.year}
      if live_event
        strong 
          font(color="red") LIVE
    h3 #{data.town} 
    h3 #{dates}
    h5 #{data.event_type}
    h5 Last updated at #{data.updated}
    if live_event
      h5
        font(color="red") You do not need to refresh this page.  It will refresh automatically to get you the latest results.

    - var s = data.num_stages;
    while s > 0
      - 
        var stage = s.toString()
        if('stage_times' in data) {
          if ('location' in data['stage_times']) {
            var location  = data['stage_times'][stage]['location']
          }
          if (stage in data['stage_times']) {
            var stage_scores  = data['stage_times'][stage]['scores']
            var num_scores = stage_scores.length
          }

          if (stage in data['stage_standings']) {
            var stage_standings  = data['stage_standings'][stage]['scores']
            var num_standings = stage_standings.length
          }
        }
        s--
      br
      h2 Stage #{stage} - #{location}
      table
        thead
          tr
            td(colspan="8") Stage Standings
            td(colspan="9") Overall Standings
          tr
            th.label Pos
            th.label #
            th.label Cl
            th.label CP
            th.label Driver / Codriver
            th.label Time
            th.label Back
            th.label Avg MPH

            th.label Pos
            th.label #
            th.label Cl
            th.label CP
            th.label Driver / Codriver
            th.label Time
            th.label Back
            th.label Gap
            th.label Penalties
        tbody
          if num_standings
            - var n = 0
            while n < num_scores
              - 
                var stage = stage_scores[n]
                var standing = (n < num_standings) ? stage_standings[n] : false
                var standing = (standing.position) ? standing : false
                n++
              tr
                th.label #{stage.position || '-'}
                th #{stage.car_number}
                th #{stage.car_class}
                th #{stage.position_in_class}
                th #{stage.driver} / #{stage.codriver}
                if stage.dnf
                  td(colspan="3", rowspan="1") DNF
                else
                  th.time #{stage.total_time}
                  th.time #{stage.diff_leader}
                  th.time #{stage.avg_mph}
                if standing
                  th.label #{standing.position}
                  th #{standing.car_number}
                  th #{standing.car_class}
                  th #{standing.position_in_class}
                  th #{standing.driver} / #{standing.codriver}
                  th.time #{standing.total_time}
                  th.time #{standing.diff_leader}
                  th.time #{standing.diff_previous}
                  th.time #{standing.total_penalty_time}
                else
                  th.label 
                  td(colspan="8", rowspan="1")
          else
            td(colspan="17", rowspan="1") No results posted
  else
    p.
      You are the first to view this event.  We are updating our database of scores to reflect Rally America's website for this event.  Code: #{data.event_code}, Year: #{data.year}.  This page will automatically refresh when the data is available.  Please be patient. 
    p Your jobid is #[strong#jobid .].  The status is:  #[strong#status .]
